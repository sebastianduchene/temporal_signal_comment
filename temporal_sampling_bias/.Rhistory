}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods.csv", head = T, sep = ",", row.names = 1)
lognormal_het_unbound <- lognormal_results[grep("het.+unbound", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "SC_het"] - lognormal_het_unbound[i, "SC_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "UCLD_het"] - lognormal_het_unbound[i, "UCLD_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
best_bf <- max(lognormal_het_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihood_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_het_unbound <- lognormal_results[grep("het.+unbound", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "SC_het"] - lognormal_het_unbound[i, "SC_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "UCLD_het"] - lognormal_het_unbound[i, "UCLD_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
best_bf <- max(lognormal_het_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
exponential_results <- read.table("exponential_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
exponential_iso_unbound <- exponential_results[grep("ultra.+unbound", rownames(exponential_results)),]
head(exponential_iso_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
count_have_temporal_signal[i] <- exponential_iso_unbound[i, "SC_het"] - exponential_iso_unbound[i, "SC_iso"] <= -3.2
}
print(count_have_temporal_signal)
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
count_have_temporal_signal[i] <- exponential_iso_unbound[i, "SC_het"] - exponential_iso_unbound[i, "SC_iso"] <= -3.2
}
print(count_have_temporal_signal)
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_iso_unbound)) {
count_have_temporal_signal[i] <- exponential_iso_unbound[i, "UCLD_het"] - exponential_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
gamma_results <- read.table("gamma_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
gamma_iso_unbound <- gamma_results[grep("ultra.+unbound", rownames(gamma_results)),]
head(gamma_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
count_have_temporal_signal[i] <- gamma_iso_unbound[i, "SC_het"] - gamma_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
count_have_temporal_signal[i] <- gamma_iso_unbound[i, "UCLD_het"] - gamma_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
best_bf <- max(gamma_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(gamma_iso_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_iso_unbound <- lognormal_results[grep("ultra.+unbound", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "SC_het"] - lognormal_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "UCLD_het"] - lognormal_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
exponential_results <- read.table("exponential_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
exponential_het_unbound <- exponential_results[grep("het.+bounds", rownames(exponential_results)),]
head(exponential_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
count_have_temporal_signal[i] <- exponential_het_unbound[i, "SC_het"] - exponential_het_unbound[i, "SC_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
count_have_temporal_signal[i] <- exponential_het_unbound[i, "UCLD_het"] - exponential_het_unbound[i, "UCLD_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
best_bf <- max(exponential_het_unbound[i, c("UCLD_het", "SC_het")]) - max(exponential_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
gamma_results <- read.table("gamma_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
gamma_het_unbound <- gamma_results[grep("het.+bounds", rownames(gamma_results)),]
head(gamma_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_het_unbound)) {
count_have_temporal_signal[i] <- gamma_het_unbound[i, "SC_het"] - gamma_het_unbound[i, "SC_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_het_unbound)) {
count_have_temporal_signal[i] <- gamma_het_unbound[i, "UCLD_het"] - gamma_het_unbound[i, "UCLD_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_het_unbound)) {
best_bf <- max(gamma_het_unbound[i, c("UCLD_het", "SC_het")]) - max(gamma_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_het_unbound <- lognormal_results[grep("het.+bounds", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "SC_het"] - lognormal_het_unbound[i, "SC_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
count_have_temporal_signal[i] <- lognormal_het_unbound[i, "UCLD_het"] - lognormal_het_unbound[i, "UCLD_iso"] >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
best_bf <- max(lognormal_het_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_het_unbound)) {
best_bf <- max(lognormal_het_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
exponential_results <- read.table("exponential_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
exponential_iso_unbound <- exponential_results[grep("ultra.+bounds", rownames(exponential_results)),]
head(exponential_iso_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_het_unbound)) {
count_have_temporal_signal[i] <- exponential_iso_unbound[i, "SC_het"] - exponential_iso_unbound[i, "SC_iso"] <= -3.2
}
print(count_have_temporal_signal)
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_iso_unbound)) {
count_have_temporal_signal[i] <- exponential_iso_unbound[i, "UCLD_het"] - exponential_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(exponential_iso_unbound)) {
best_bf <- max(exponential_het_unbound[i, c("UCLD_het", "SC_het")]) - max(exponential_het_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
gamma_results <- read.table("gamma_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
gamma_iso_unbound <- gamma_results[grep("ultra.+bounds", rownames(gamma_results)),]
head(gamma_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
count_have_temporal_signal[i] <- gamma_iso_unbound[i, "SC_het"] - gamma_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
count_have_temporal_signal[i] <- gamma_iso_unbound[i, "UCLD_het"] - gamma_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(gamma_iso_unbound)) {
best_bf <- max(gamma_iso_unbound[i, c("UCLD_iso", "SC_iso")]) - max(gamma_iso_unbound[i, c("UCLD_het", "SC_het")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods.csv", head = T, sep = ",", row.names = 1)
lognormal_iso_unbound <- lognormal_results[grep("ultra.+bounds", rownames(lognormal_results)),]
head(lognormal_het_unbound)
lognormal_results <- read.table("lognormal_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_iso_unbound <- lognormal_results[grep("ultra.+bounds", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "SC_het"] - lognormal_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "UCLD_het"] - lognormal_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")]) - max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_iso_unbound <- lognormal_results[grep("ultra.+bounds", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "SC_het"] - lognormal_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "UCLD_het"] - lognormal_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")]) - max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
lognormal_results <- read.table("lognormal_marginal_likelihoods_relaxed.csv", head = T, sep = ",", row.names = 1)
lognormal_iso_unbound <- lognormal_results[grep("ultra.+unbound", rownames(lognormal_results)),]
head(lognormal_het_unbound)
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "SC_het"] - lognormal_iso_unbound[i, "SC_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
count_have_temporal_signal[i] <- lognormal_iso_unbound[i, "UCLD_het"] - lognormal_iso_unbound[i, "UCLD_iso"] <= -3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 3.2
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")])
count_have_temporal_signal[i] <- best_bf >= 0
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")])
print(best_bf)
count_have_temporal_signal[i] <- best_bf >= 0
}
print(sum(count_have_temporal_signal))
count_have_temporal_signal <- vector()
for(i in 1:nrow(lognormal_iso_unbound)) {
best_bf <- max(lognormal_iso_unbound[i, c("UCLD_het", "SC_het")]) - max(lognormal_iso_unbound[i, c("UCLD_iso", "SC_iso")])
print(best_bf)
count_have_temporal_signal[i] <- best_bf >= 0
}
library(NELSI)
library(TreePar)
library(TreeSim)
library(RColorBrewer)
setwd("~/Dropbox/projects_WORKING/temporal_signal_comment/temporal_signal_comment/temporal_sampling_bias/")
dir(pattern = "log")
balanced <- dir(pattern = "^unbalanced.+log")
balanced
balanced <- dir(pattern = "^balanced.+log")
balanced
balanced <- dir(pattern = "^balanced.+log")
balanced
unbalanced <- dir(pattern = "^unbalanced.+log")
unbalanced
balanced
temp <- read.table("balanced_sampling_genome_1.log", head = T)
head(temp)
dim(temp)
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$rate.mean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate, ci)))
}
get_ci_clock_rate("balanced_sampling_genome_1.log")
temp <- read.table("balanced_sampling_genome_1.log", header = TRUE))
temp <- read.table("balanced_sampling_genome_1.log", header = TRUE)
temp$rate.mean
dim(temp)
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$rate.mean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate, ci)))
}
get_ci_clock_rate("balanced_sampling_genome_1.log")
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$rate.mean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate), ci))
}
get_ci_clock_rate("balanced_sampling_genome_1.log")
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 3)
for(i in 1:length(balanced)){
balanced_stats[i,] <- get_ci_clock_rate(balanced[i])
}
balanced_stats <- balanced_stats[order(balanced_stats[,1]),]
head(balanced_stats)
plot(1:100, balanced_stats[,1], ylim = c(0.0005, 0.0015),
xlab = "Simulation", ylab = "Clock rate", type = "l")
plot(1:100, balanced_stats[,1],
xlab = "Simulation", ylab = "Clock rate", type = "l")
plot(1:100, balanced_stats[,1],
xlab = "Simulation", ylab = "Clock rate", type = "l", pch = 20)
plot(1:100, balanced_stats[,1],
xlab = "Simulation", ylab = "Clock rate", type = "l", pch = 20)
plot(1:100, balanced_stats[,1],
xlab = "Simulation", ylab = "Clock rate", type = "p")
plot(1:100, balanced_stats[,1],
xlab = "Simulation", ylab = "Clock rate", type = "p", pch = 20)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(1e-7, 1e-3)), xlim = c(-10, 110),
xlab = "", ylab = "")
balanced_stats <- log10(balanced_stats)
head(balanced_stats)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(1e-7, 1e-3)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "grey")
points(i, balanced_stats[i,1], pch = 19, col = "grey")
}
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(1e-7, 1e-3)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "grey")
points(i, balanced_stats[i,1], pch = 20, col = "grey")
}
source("~/Dropbox/projects_WORKING/temporal_signal_comment/temporal_signal_comment/temporal_sampling_bias/plot_results.R")
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(1e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "grey")
points(i, balanced_stats[i,1], pch = 20, col = "grey")
}
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "grey")
points(i, balanced_stats[i,1], pch = 20, col = "grey")
}
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "darkgrey")
points(i, balanced_stats[i,1], pch = 20, col = "darkgrey")
}
lines(c(0, 100), log10(c(1e-5, 1e-5)), lty = 2)
lines(c(-10, 110), log10(c(1e-5, 1e-5)), lty = 2)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "darkgrey")
points(i, balanced_stats[i,1], pch = 20, col = "darkgrey")
}
lines(c(-15, 115), log10(c(1e-5, 1e-5)), lty = 2)
head(temp)
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$ucld.mean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate), ci))
}
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 3)
for(i in 1:length(balanced)){
balanced_stats[i,] <- get_ci_clock_rate(balanced[i])
}
balanced_stats <- balanced_stats[order(balanced_stats[,1]),]
balanced_stats <- log10(balanced_stats)
head(balanced_stats)
head(balanced_stats)
head(temp)
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$ucldMean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate), ci))
}
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 3)
for(i in 1:length(balanced)){
balanced_stats[i,] <- get_ci_clock_rate(balanced[i])
}
balanced_stats <- balanced_stats[order(balanced_stats[,1]),]
balanced_stats <- log10(balanced_stats)
head(balanced_stats)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "darkgrey")
points(i, balanced_stats[i,1], pch = 20, col = "darkgrey")
}
lines(c(-15, 115), log10(c(1e-5, 1e-5)), lty = 2)
get_ci_clock_rate <- function(log_file){
posterior <- tail(read.table(log_file, header = TRUE), 9000)
clock_rate <- posterior$rate.mean
ci <- quantile(clock_rate, c(0.025, 0.975))
return(c(mean(clock_rate), ci))
}
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 3)
for(i in 1:length(balanced)){
balanced_stats[i,] <- get_ci_clock_rate(balanced[i])
}
balanced_stats <- balanced_stats[order(balanced_stats[,1]),]
balanced_stats <- log10(balanced_stats)
head(balanced_stats)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,2:3], col = "darkgrey")
points(i, balanced_stats[i,1], pch = 20, col = "darkgrey")
}
lines(c(-15, 115), log10(c(1e-5, 1e-5)), lty = 2)
setwd("~/Dropbox/projects_WORKING/temporal_signal_comment/temporal_signal_comment/data_simulations/")
xml_analysis_template <- readLines("feast_template.xml")
fasta_files <- dir(pattern = "fasta$")
fasta_files
for(f in fasta_files){
input_aln_name <- gsub(".fasta", "", f)
xml_temp <- gsub("INPUT_ALN_NAME", input_aln_name, xml_analysis_template)
writeLines(xml_temp, con = paste0(input_aln_name, ".xml"))
}
source("~/Dropbox/projects_WORKING/temporal_signal_comment/temporal_signal_comment/temporal_sampling_bias/plot_results.R")
balanced_stats <- balanced_stats[order(balanced_stats[,2]),]
colnames(balanced_stats) <- c("log_file", "mean", "lower", "upper")
balanced_stats <- as.data.frame(balanced_stats)
balanced_stats <- log10(balanced_stats)
balanced_stats[, 2:4] <- log10(balanced_stats[, 2:4])
balanced_stats <- balanced_stats[order(balanced_stats[,2]),]
colnames(balanced_stats) <- c("log_file", "mean", "lower", "upper")
balanced_stats <- as.data.frame(balanced_stats)
balanced_stats[, 2:4] <- log10(balanced_stats[, 2:4])
balanced_stats[, 2:4] <- log10(as.numeric(balanced_stats[, 2:4]))
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 4)
for(i in 1:length(balanced)){
balanced_stats[i,] <- c(balanced[i], get_ci_clock_rate(balanced[i]))
}
balanced_stats <- balanced_stats[order(balanced_stats[,2]),]
colnames(balanced_stats) <- c("log_file", "mean", "lower", "upper")
balanced_stats[, 2:4] <- log10(as.numeric(balanced_stats[, 2:4]))
head(balanced_stats)
balanced_stats <- as.data.frame(balanced_stats)
head(balanced_stats)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i,3:4], col = "darkgrey")
points(i, balanced_stats[i, 2], pch = 20, col = "darkgrey")
}
lines(c(-15, 115), log10(c(1e-5, 1e-5)), lty = 2)
balanced_stats <- matrix(NA, nrow = length(balanced), ncol = 4)
for(i in 1:length(balanced)){
balanced_stats[i,] <- c(balanced[i], get_ci_clock_rate(balanced[i]))
}
balanced_stats <- balanced_stats[order(balanced_stats[,2]),]
colnames(balanced_stats) <- c("log_file", "mean", "lower", "upper")
balanced_stats[, 2:4] <- log10(as.numeric(balanced_stats[, 2:4]))
balanced_stats <- as.data.frame(balanced_stats)
balanced_stats$mean <- as.numeric(as.character(balanced_stats$mean))
balanced_stats$lower <- as.numeric(as.character(balanced_stats$lower))
balanced_stats$upper <- as.numeric(as.character(balanced_stats$upper))
head(balanced_stats)
# True value is 1e-5 subs/site/year
plot(0, 0, ylim = log10(c(5e-6, 5e-4)), xlim = c(-10, 110),
xlab = "", ylab = "")
for(i in 1:nrow(balanced_stats)){
lines(rep(i, 2), balanced_stats[i, 3:4], col = "darkgrey")
points(i, balanced_stats[i, 2], pch = 20, col = "darkgrey")
}
lines(c(-15, 115), log10(c(1e-5, 1e-5)), lty = 2)
head(balanced_stats)
head(balanced_stats, 10)
balanced_stats[:10, 2]
exp(balanced_stats[1:10, 2])
10^(balanced_stats[1:10, 2])
